## =================== VERSION ===================
AWSTemplateFormatVersion: '2010-09-09'

## =================== DESCRIPTION ===================
Description: >-
  AWS CloudFormation sample template. 
  Create an IAM User and optionally attach it to IAM group(s)
  AWS doc: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html

## =================== PARAMETERS ===================
Parameters:
  paramUserName:
    Description: Unique name for a new user
    Type: String
    AllowedPattern: "^[a-zA-Z][a-zA-Z0-9]{1,64}$"
    ConstraintDescription: User name must be between 1 and 64 alphanumeric characters in length, starting with an uppercase or lowercase character of the alphabet.
  paramUserPassword:
    Description: Account password for a new user
    Type: String    
    NoEcho: 'true' # mask the parameter value as asterisks (*****) to prevent it from being displayed in the console, CLI, or API
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9!@#$%&]{8,32}$
    ConstraintDescription: Password must be between 8 and 32 characters, start with lowercase or uppercase letter, and can be alphanumeric with the following special characters !@#$%&
  paramGroups:
    Description: 'Comma-delimited list of group names  to which you want to add the user (optional)'
    Type: CommaDelimitedList
    Default: ''
  paramPath:
    Description: IAM Path that you want to associate with the user 
    Type: String
    AllowedPattern: (^\/$)|(^\/.*\/$)
    Default: "/"
  paramTagValue:
    Description: Tag value that identifies resources as a target for deployments
    Type: String
    Default: DoloresAbernathy
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters

## =================== CONDITIONS ===================
Conditions:
  hasGroups: # check if at list one group was specified as an input parameter
    !Not [!Equals [ !Join ['', !Ref paramGroups], '' ] ]

## =================== RESOURCES ===================
Resources:
  myUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: !Ref paramUserName # give a name to this user
      LoginProfile: # specify a password for this user
        Password: !Ref paramUserPassword
        PasswordResetRequired: true # make this user to set a new password on next sign-in
      Path: !Ref paramPath
      Groups: 
        - !If [ hasGroups, !Ref paramGroups, !Ref "AWS::NoValue"] # attach this user to the list of specified groups if any
      Tags:
        - Key: Name
          Value: !Ref paramTagValue