## =================== VERSION =================== ##
AWSTemplateFormatVersion: '2010-09-09'

## =================== DESCRIPTION =================== ##
Description: >-
  AWS CloudFormation sample template
  - Create a new CodePipeline
  - Create an SNS topic for deployment approval
  - Create a new role for CodePipeline to access S3, CodeCommit, CloudFormation, CodeBuild, etc
  - Create a new role for CloudFormation to access S3 and EC2

## =================== PARAMETERS =================== ##
Parameters:
  paramS3BucketForCodeBuildArtifacts:
    Type: String
    Description: S3 bucket name for storing CodeBuild artifacts
    Default: artifacts-s3bucket-for-cfn-repo 
  paramCodeCommitRepoName:
    Type: String
    Description: Repository name that contains initial source code
    Default: cfn-repo
  paramCodeBuildProjectName:
    Type: String
    Description: CodeBuild project name that builds the target project
  paramEmail:
    Description: Your email for CodePipeline notifications
    Type: String

## =================== RESOURCES =================== ##
Resources:

  # Create a new CodePipeline
  myCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:  !Sub my-codepipeline-${AWS::StackName}
      RoleArn: !GetAtt myCodePipelineRole.Arn
      # Provide S3 bucket name that contains codebuild artifacts
      ArtifactStore:
        Type: S3
        Location: !Ref paramS3BucketForCodeBuildArtifacts
      Stages:
        # Stage 1
        - Name: StageOne-SourceCode
          Actions:
            # Action 1/1 - Set CodeCommit
            - Name: set-codecommit
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                BranchName: master
                RepositoryName: !Ref paramCodeCommitRepoName
              OutputArtifacts:
                - Name: stageone-codecommit-output
        # Stage 2
        - Name: StageTwo-Build
          Actions:
            # Action 1/1 - Set CodeBuild
            - Name: set-codebuild
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref paramCodeBuildProjectName
              InputArtifacts:
                - Name: stageone-codecommit-output
              OutputArtifacts:
                - Name: stagetwo-codebuild-output
        # Stage 3
        - Name: StageThree-Create-CFNStack-for-Dev
          Actions:
            # Action 1/1 - Create CloudFormation stack for DEV env
            - Name: run-cfnstack-for-dev
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE #create and update CFN stack
                RoleArn: !GetAtt myCloudFormationRole.Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: my-vpc-stack-via-codepipeline-for-dev
                TemplateConfiguration: stagetwo-codebuild-output::vpc-config.json
                TemplatePath: stagetwo-codebuild-output::vpc.yml 
              InputArtifacts:
                - Name: stagetwo-codebuild-output
              OutputArtifacts:
                - Name: stagethree-cfnstack-for-dev-output
        # Stage 4
        - Name: StageFour-Create-CFNStack-for-Prod
          Actions:
            # Action 1/3 -Create a changeset of CloudFormation stack for PROD env
            - Name: create-cfnstack-changeset-for-prod
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE # create a changeset of vpc.yml template once it's changed and pushed into CodeCommit
                ChangeSetName: my-changeset-for-prod
                RoleArn: !GetAtt myCloudFormationRole.Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: my-vpc-stack-via-codepipeline-for-prod
                TemplateConfiguration: stagetwo-codebuild-output::vpc-config.json
                TemplatePath: stagetwo-codebuild-output::vpc.yml 
              InputArtifacts:
                - Name: stagetwo-codebuild-output
              OutputArtifacts:
                - Name: stagefour-cfnstack-changeset-for-prod-output
            # Action 2/3 - Approve a changeset  for PROD env via SNS notification to emai
            - Name: set-approval-for-prod
              RunOrder: 2
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn: !Ref myCodePipelineSNSTopic
                CustomData: Hey you, approve prod deployment
             # Action 3/3 - Create CloudFormation stack for PROD env
            - Name: run-cfnstack-for-prod
              RunOrder: 3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: my-changeset-for-prod
                StackName: my-vpc-stack-via-codepipeline-for-prod
              InputArtifacts:
                - Name: stagefour-cfnstack-changeset-for-prod-output
              OutputArtifacts:
                - Name: stagefour-cfnstack-for-prod-output

  # Create an SNS topic for deployment approval
  myCodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref paramEmail
          Protocol: email   

  # Create a new role for CodePipeline to access S3, CodeCommit, CloudFormation, CodeBuild, etc
  myCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub my-codepipeline-role-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'codepipeline.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub my-codepipeline-policy-${AWS::StackName}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:DeleteObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:ListBucket'
                  - 's3:PutObject'
                  - 's3:GetBucketPolicy'
                Resource:
                  - Fn::Sub: arn:aws:s3:::${paramS3BucketForCodeBuildArtifacts}
                  - Fn::Sub: arn:aws:s3:::${paramS3BucketForCodeBuildArtifacts}/*
              - Effect: 'Allow'
                Action:
                  - 'sns:Publish'
                Resource: '*'
              - Effect: 'Allow'
                Action:
                  - 'codecommit:ListBranches'
                  - 'codecommit:ListRepositories'
                  - 'codecommit:BatchGetRepositories'
                  - 'codecommit:Get*'
                  - 'codecommit:GitPull'
                  - 'codecommit:UploadArchive'
                Resource: !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${paramCodeCommitRepoName}
              - Effect: 'Allow'
                Action:
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:CreateUploadBucket'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:Describe*'
                  - 'cloudformation:List*'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:ValidateTemplate'
                  - 'cloudformation:ExecuteChangeSet'
                Resource: '*'
              - Effect: 'Allow'
                Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource: '*'
              - Effect: 'Allow'
                Action:
                  - 'iam:PassRole'
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${myCloudFormationRole}  

  # Create a new role for CloudFormation to access S3 and EC2
  myCloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub my-cloudformation-role-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'cloudformation.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub my-cloudformation-policy-${AWS::StackName}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                Resource:
                  - Fn::Sub: arn:aws:s3:::${paramS3BucketForCodeBuildArtifacts}
                  - Fn::Sub: arn:aws:s3:::${paramS3BucketForCodeBuildArtifacts}/*
              - Effect: Allow
                Action:
                  - 'ec2:AcceptVpcPeeringConnection'
                  - 'ec2:AcceptVpcEndpointConnections'
                  - 'ec2:AllocateAddress'
                  - 'ec2:AssignIpv6Addresses'
                  - 'ec2:AssignPrivateIpAddresses'
                  - 'ec2:AssociateAddress'
                  - 'ec2:AssociateDhcpOptions'
                  - 'ec2:AssociateRouteTable'
                  - 'ec2:AssociateSubnetCidrBlock'
                  - 'ec2:AssociateVpcCidrBlock'
                  - 'ec2:AttachClassicLinkVpc'
                  - 'ec2:AttachInternetGateway'
                  - 'ec2:AttachNetworkInterface'
                  - 'ec2:AttachVpnGateway'
                  - 'ec2:AuthorizeSecurityGroupEgress'
                  - 'ec2:AuthorizeSecurityGroupIngress'
                  - 'ec2:CreateCustomerGateway'
                  - 'ec2:CreateDefaultSubnet'
                  - 'ec2:CreateDefaultVpc'
                  - 'ec2:CreateDhcpOptions'
                  - 'ec2:CreateEgressOnlyInternetGateway'
                  - 'ec2:CreateFlowLogs'
                  - 'ec2:CreateInternetGateway'
                  - 'ec2:CreateNatGateway'
                  - 'ec2:CreateNetworkAcl'
                  - 'ec2:CreateNetworkAcl'
                  - 'ec2:CreateNetworkAclEntry'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:CreateNetworkInterfacePermission'
                  - 'ec2:CreateRoute'
                  - 'ec2:CreateRouteTable'
                  - 'ec2:CreateSecurityGroup'
                  - 'ec2:CreateSubnet'
                  - 'ec2:CreateTags'
                  - 'ec2:CreateVpc'
                  - 'ec2:CreateVpcEndpoint'
                  - 'ec2:CreateVpcEndpointConnectionNotification'
                  - 'ec2:CreateVpcEndpointServiceConfiguration'
                  - 'ec2:CreateVpcPeeringConnection'
                  - 'ec2:CreateVpnConnection'
                  - 'ec2:CreateVpnConnectionRoute'
                  - 'ec2:CreateVpnGateway'
                  - 'ec2:DeleteCustomerGateway'
                  - 'ec2:DeleteDhcpOptions'
                  - 'ec2:DeleteEgressOnlyInternetGateway'
                  - 'ec2:DeleteFlowLogs'
                  - 'ec2:DeleteInternetGateway'
                  - 'ec2:DeleteNatGateway'
                  - 'ec2:DeleteNetworkAcl'
                  - 'ec2:DeleteNetworkAclEntry'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DeleteNetworkInterfacePermission'
                  - 'ec2:DeleteRoute'
                  - 'ec2:DeleteRouteTable'
                  - 'ec2:DeleteSecurityGroup'
                  - 'ec2:DeleteSubnet'
                  - 'ec2:DeleteTags'
                  - 'ec2:DeleteVpc'
                  - 'ec2:DeleteVpcEndpoints'
                  - 'ec2:DeleteVpcEndpointConnectionNotifications'
                  - 'ec2:DeleteVpcEndpointServiceConfigurations'
                  - 'ec2:DeleteVpcPeeringConnection'
                  - 'ec2:DeleteVpnConnection'
                  - 'ec2:DeleteVpnConnectionRoute'
                  - 'ec2:DeleteVpnGateway'
                  - 'ec2:DescribeAccountAttributes'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:DescribeAvailabilityZones'
                  - 'ec2:DescribeClassicLinkInstances'
                  - 'ec2:DescribeCustomerGateways'
                  - 'ec2:DescribeDhcpOptions'
                  - 'ec2:DescribeEgressOnlyInternetGateways'
                  - 'ec2:DescribeFlowLogs'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInternetGateways'
                  - 'ec2:DescribeKeyPairs'
                  - 'ec2:DescribeMovingAddresses'
                  - 'ec2:DescribeNatGateways'
                  - 'ec2:DescribeNetworkAcls'
                  - 'ec2:DescribeNetworkInterfaceAttribute'
                  - 'ec2:DescribeNetworkInterfacePermissions'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribePrefixLists'
                  - 'ec2:DescribeRouteTables'
                  - 'ec2:DescribeSecurityGroupReferences'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeStaleSecurityGroups'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeTags'
                  - 'ec2:DescribeVpcAttribute'
                  - 'ec2:DescribeVpcClassicLink'
                  - 'ec2:DescribeVpcClassicLinkDnsSupport'
                  - 'ec2:DescribeVpcEndpointConnectionNotifications'
                  - 'ec2:DescribeVpcEndpointConnections'
                  - 'ec2:DescribeVpcEndpoints'
                  - 'ec2:DescribeVpcEndpointServiceConfigurations'
                  - 'ec2:DescribeVpcEndpointServicePermissions'
                  - 'ec2:DescribeVpcEndpointServices'
                  - 'ec2:DescribeVpcPeeringConnections'
                  - 'ec2:DescribeVpcs'
                  - 'ec2:DescribeVpnConnections'
                  - 'ec2:DescribeVpnGateways'
                  - 'ec2:DetachClassicLinkVpc'
                  - 'ec2:DetachInternetGateway'
                  - 'ec2:DetachNetworkInterface'
                  - 'ec2:DetachVpnGateway'
                  - 'ec2:DisableVgwRoutePropagation'
                  - 'ec2:DisableVpcClassicLink'
                  - 'ec2:DisableVpcClassicLinkDnsSupport'
                  - 'ec2:DisassociateAddress'
                  - 'ec2:DisassociateRouteTable'
                  - 'ec2:DisassociateSubnetCidrBlock'
                  - 'ec2:DisassociateVpcCidrBlock'
                  - 'ec2:EnableVgwRoutePropagation'
                  - 'ec2:EnableVpcClassicLink'
                  - 'ec2:EnableVpcClassicLinkDnsSupport'
                  - 'ec2:ModifyNetworkInterfaceAttribute'
                  - 'ec2:ModifySubnetAttribute'
                  - 'ec2:ModifyVpcAttribute'
                  - 'ec2:ModifyVpcEndpoint'
                  - 'ec2:ModifyVpcEndpointConnectionNotification'
                  - 'ec2:ModifyVpcEndpointServiceConfiguration'
                  - 'ec2:ModifyVpcEndpointServicePermissions'
                  - 'ec2:ModifyVpcPeeringConnectionOptions'
                  - 'ec2:ModifyVpcTenancy'
                  - 'ec2:MoveAddressToVpc'
                  - 'ec2:RejectVpcEndpointConnections'
                  - 'ec2:RejectVpcPeeringConnection'
                  - 'ec2:ReleaseAddress'
                  - 'ec2:ReplaceNetworkAclAssociation'
                  - 'ec2:ReplaceNetworkAclEntry'
                  - 'ec2:ReplaceRoute'
                  - 'ec2:ReplaceRouteTableAssociation'
                  - 'ec2:ResetNetworkInterfaceAttribute'
                  - 'ec2:RestoreAddressToClassic'
                  - 'ec2:RevokeSecurityGroupEgress'
                  - 'ec2:RevokeSecurityGroupIngress'
                  - 'ec2:UnassignIpv6Addresses'
                  - 'ec2:UnassignPrivateIpAddresses'
                  - 'ec2:UpdateSecurityGroupRuleDescriptionsEgress'
                  - 'ec2:UpdateSecurityGroupRuleDescriptionsIngress'
                Resource: '*'             